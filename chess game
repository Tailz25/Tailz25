//chess game bored so build this 

class ChessGame:
    def __init__(self):
        self.board = [
            ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],
            ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],
            ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']
        ]
        self.current_player = 'white'

    def print_board(self):
        for row in self.board:
            print(' '.join(row))
        print()

    def is_valid_move(self, start, end):
        # Add more sophisticated move validation logic here
        return True

    def make_move(self, start, end):
        if self.is_valid_move(start, end):
            start_row, start_col = 8 - int(start[1]), ord(start[0]) - ord('a')
            end_row, end_col = 8 - int(end[1]), ord(end[0]) - ord('a')

            self.board[end_row][end_col] = self.board[start_row][start_col]
            self.board[start_row][start_col] = ' '

            self.switch_player()
        else:
            print("Invalid move! Try again.")

    def switch_player(self):
        self.current_player = 'black' if self.current_player == 'white' else 'white'

    def play(self):
        while True:
            self.print_board()
            print(f"{self.current_player}'s turn.")
            start = input("Enter the starting position (e.g., e2): ")
            end = input("Enter the ending position (e.g., e4): ")

            self.make_move(start, end)

if __name__ == "__main__":
    game = ChessGame()
    game.play()
